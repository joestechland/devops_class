---

# must install openssh-server on new machine first, then copy ofer ssh key

- name: display server facts
  debug:
    msg: "{{ ansible_facts.ansible_virtualization_type  }}"

- name: Create shares dir
  file:
    path: "/home/{{ user }}/shares"
    state: directory
  become: false

- name: mount Shares if VMWare.
  mount:
    path: /home/{{ user }}/shares
    src: .host:/
    fstype: fuse.vmhgfs-fuse
    opts: defaults,allow_other
    state: present
  when: ansible_facts.ansible_virtualization_type == "VMware"
#     become: false
# +change /etc/fuse.conf to allow_other

# - name: Recursively change ownership of shares directory.
#   file:
#     path: "/home/{{ user }}/shares"
#     state: directory
#     recurse: true
#     owner: "{{ user }}"


- name: Update apt-get repo and cache.
  apt:
    update_cache: true

- name: Upgrade all apt packages
  apt:
    upgrade: dist
    force_apt_get: true

- name: install visual studio code.
  snap:
    name: code
    classic: true


# - name: add user oracle.
#   user:
#     name: oracle
#     group: oracle
#     #   - adm
#     #   - cdrom
#     #   - sudo
#     #   - dip
#     #   - plugdev
#     #   - lpadmin
#     #   - lxd
#     #   - sambashare
#     createhome: true
#     password: "{{ vaulted_password | password_hash('sha512') }}"
#     system: true

- name: install ansible and linters and git.
  apt:
    pkg:
      - ansible
      - yamllint
      - ansible-lint
      - git
      - curl
      - python3
      - python3-pip
      - gkrellm
      - sshfs

# - name: Install VM, Docker, K8s.
#   apt:
#     pkg:
#       - vagrant
#       - virtualbox
#       - apt-transport-https
#       - ca-certificates
#       - software-properties-common
#       - docker.io

- name: Update apt-get repo and cache.
  apt:
    update_cache: true

- name: update python 3 alternatives
  command: "update-alternatives --install /usr/bin/python python /usr/bin/python3 1"


- name: remove unwanted packages.
  apt:
    pkg:
      - thunderbird
      - libreoffice*
      - rhythmbox
    state: absent

- name: Clone a devops repo with separate git directory.
  git:
    repo: "{{ git_root }}/{{ devops_repo }}"
    dest: "/home/{{ user }}/{{ devops_repo }}"
    update: false

- name: Recursively change ownership of devops directory.
  file:
    path: "/home/{{ user }}/{{ devops_repo }}"
    state: directory
    recurse: true
    owner: "{{ user }}"

- name: Clone a devops_class repo with separate git directory.
  git:
    repo: "{{ git_root }}/{{ devops_class_repo }}"
    dest: "/home/{{ user }}/{{ devops_class_repo }}"
    update: false


- name: Recursively change ownership of devops_class directory.
  file:
    path: "/home/{{ user }}/{{ devops_class_repo }}"
    state: directory
    recurse: true
    owner: "{{ user }}"

- name: Gather facts.
  setup:
  register: server_facts

- name: display server facts
  debug:
    msg: "{{ server_facts.ansible_facts.ansible_virtualization_type  }}"

- name: Create shares dir
  file:
    path: "/home/{{ user }}/shares"
    state: directory
  become: false

- name: mount Shares if VMWare.
  mount:
    path: /home/{{ user }}/shares
    src: .host:/
    fstype: fuse.vmhgfs-fuse
    opts: defaults,allow_other
    state: present
  when: server_facts.ansible_facts.ansible_virtualization_type == "VMware"
#     become: false
# +change /etc/fuse.conf to allow_other

# - name: Recursively change ownership of shares directory.
#   file:
#     path: "/home/{{ user }}/shares"
#     state: directory
#     recurse: true
#     owner: "{{ user }}"


- name: Update apt-get repo and cache.
  apt:
    update_cache: true

- name: Upgrade all apt packages
  apt:
    upgrade: dist
    force_apt_get: true

- name: install visual studio code.
  snap:
    name: code
    classic: true


# - name: add user oracle.
#   user:
#     name: oracle
#     group: oracle
#     #   - adm
#     #   - cdrom
#     #   - sudo
#     #   - dip
#     #   - plugdev
#     #   - lpadmin
#     #   - lxd
#     #   - sambashare
#     createhome: true
#     password: "{{ vaulted_password | password_hash('sha512') }}"
#     system: true

- name: install ansible and linters and git.
  apt:
    pkg:
      - ansible
      - yamllint
      - ansible-lint
      - git
      - curl
      - python3
      - python3-pip
      - gkrellm
      - sshfs

- name: Install VM, Docker, K8s.
  apt:
    pkg:
      - vagrant
      - virtualbox
      - apt-transport-https
      - ca-certificates
      - software-properties-common
      - docker.io

- name: Update apt-get repo and cache.
  apt:
    update_cache: true

- name: update python 3 alternatives
  command: "update-alternatives --install /usr/bin/python python /usr/bin/python3 1"


- name: remove unwanted packages.
  apt:
    pkg:
      - thunderbird
      - libreoffice*
      - rhythmbox
    state: absent

- name: Clone a devops repo with separate git directory.
  git:
    repo: "{{ git_root }}/{{ devops_repo }}"
    dest: "/home/{{ user }}/{{ devops_repo }}"
    update: false

- name: Recursively change ownership of devops directory.
  file:
    path: "/home/{{ user }}/{{ devops_repo }}"
    state: directory
    recurse: true
    owner: "{{ user }}"

- name: Clone a devops_class repo with separate git directory.
  git:
    repo: "{{ git_root }}/{{ devops_class_repo }}"
    dest: "/home/{{ user }}/{{ devops_class_repo }}"
    update: false


- name: Recursively change ownership of devops_class directory.
  file:
    path: "/home/{{ user }}/{{ devops_class_repo }}"
    state: directory
    recurse: true
    owner: "{{ user }}"


# install oracle okit - requres docker & start docker


# https://www.ansibletutorials.com/adding-users
# install kubernetes and docker is a schwaz - do it in a separate playbook
# https://kubernetes.io/blog/2019/03/15/kubernetes-setup-using-ansible-and-vagrant/
