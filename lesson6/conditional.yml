---
- hosts: all
  become: true
  vars:
    vaulted_password: oracle

  tasks:
    - name: print server facts.
      tags: print
      block:

      - name: Collect only selected facts
        setup:
          filter:
          - 'ansible_distribution'
          - 'ansible_machine_id'
          - 'ansible_*_mb'
        register: filtered_facts

      - name: show  filtered_facts.
        debug:
          var: filtered_facts
        tags:
  #       - stats
          - debug        

  #     - name: show  ansible_facts.
  #       debug:
  #         var: ansible_facts
  #       tags:
  # #       - stats
  #         - debug

      - name: show server stats 2.
        debug:
          var: ansible_facts.all_ipv4_addresses
        tags:
          - debug

      - name: show server stats 3.
        debug:
          var: ansible_facts.mounts
        tags:
          - debug

      - name: show server stats 4.
        debug:
          var: ansible_facts.mounts[0].uuid
        tags:
          - debug

      - name: show server stats 5.
        debug:
          var: ansible_facts.mounts
        when: ansible_facts.mounts[0].device  == "/dev/sda1"
        tags: [ never, debug ]

      - name: show server stats 6.
        debug:
          msg:
            - Show server stats 6 {{ ansible_facts.mounts }}
            -
            - "Show even more server stats!!  {{ ansible_facts.mounts[1].block_available }}"
        when: ansible_facts.mounts[0].device  == "/dev/sda1"
        tags: [ never, debug ]

    - name: test different conditionals.
      vars:
        foo: 'foo'
        bar: 'bar'
        a: 3
      debug:
        msg:
          - "{{ 0 in [1, 2, 3] }}"
          - "{{ 'see' in 'Can you see me?' }}"
          - "{{ foo != bar }}"
          - "{{ (1 < 2) and ('a' not in 'best') }}"
          - "{{ 4 in [1, 2, 3] }}"
          - "{{ foo == bar }}"
          - "foo != foo  + {{ foo != foo }}"

          - "{{ (foo != foo) or (a in [1, 2, 3]) }}"
# can also test for "even" and "iterable"
#you can invoke Pythonâ€™s built-in library functions (like string.split, [number].is_- signed()) to manipl;ute variables
    - name: Do String manipulation.
      vars:
        user_name: 'Joe Greenwald'
      debug:
        msg:
          - user_name
          - "{{ user_name }}"
          - "{{ user_name.split(' ') }}"
          - "{{ user_name[1] }}"
          - "{{ user_name.count('e') }}"
          - "{{ user_name[0:3] }}"
          - "{{ user_name[1] + user_name[8] }}"
      when: user_name[0:3]  == 'joe'
# others upper(), lower(), replace(), strip(), concat +
