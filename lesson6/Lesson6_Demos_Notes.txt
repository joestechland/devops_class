Last Week:
    Var syntax  - vartester.yml
    conditional.yml 
    Conditionals from data in complex outputs/registered variables + Msg syntax for output 
    Python string manipulation
    If you have a large playbook, it may be useful to run only specific parts of it instead of running the entire playbook. 
    Use of -v/vvv and callback_whitelist=profile_tasks for monitoring performace and pipelinging=true for increased speed.

This Week:
    "Register" serverinfo var for setup not needed - show diffs
    Gather-Facts done by default 
        - can be disabled  with gather_facts: false
        https://docs.ansible.com/ansible/latest/user_guide/playbooks_vars_facts.html
        Can filter what will be collected - by key and by host - use setup module
        conditional.yml: 
        - name: Collect only selected facts
        setup:
          filter:
            - 'ansible_distribution'
            - 'ansible_machine_id'
            - 'ansible_*_mb'

        To see the ‘raw’ information as gathered, run this command at the command line:
            ansible.builtin.setup
            *** So - setup only used to filter what is gathered (Thanks to Russ for the Q)
    conditional.yml: Boolean Expression eval
    joy of weakly typed languages - a = 3;  Q: Does yamllint or ansible lint catch this? NO!

    Render whitespace in VSC:    
        editor.renderWhitespace": "all"
        *** https://marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow&showReviewDialog=true   - shows indentation better
        "workbench.colorCustomizations": {

        "editorWhitespace.foreground": "#fbff006c",

    More about tags:
        Using tags to execute or skip selected tasks is a two-step process:
        Add tags to your tasks, either individually or with tag inheritance from a block, play, role, or import.
        Select or skip tags when you run your playbook.
        https://docs.ansible.com/ansible/latest/user_guide/playbooks_tags.html#using-tags
    --tags all - run all tasks & ignore tags (default behavior)
    --tags [tag1, tag2] - run only tasks with either the tag tag1 or the tag tag2
    --skip-tags [tag3, tag4] - run all tasks except those with either the tag tag3 or the tag tag4
    --tags tagged - run only tasks with at least one tag
    --tags untagged - run only tasks with no tags
        https://docs.ansible.com/ansible/latest/user_guide/playbooks_tags.html
    Tags usage:

If you assign the never tag to a task or play, Ansible will skip that task or play unless you specifically request it (--tags never).
For example:
    conditional.yml      
        - name: show server stats 5.
            debug:
            var: ansible_facts.mounts
            when: ansible_facts.mounts[0].device  == "/dev/sda1"
            tags: [ never, debug ]
     debug task in the example above only runs when you specifically request the debug or never tags.
    ansible-playbook conditional.yml --tags debug    
    vs. ansible-playbook conditional.yml

    
    Can create blocks of plays and assign tag to the block:
    ansible-playbook conditional.yml --skip-tags print
     - name: print server facts.
      tags: print
      block:
      - name: Collect only selected facts
        setup:
          filter:
            - 'ansible_distribution'
            - 'ansible_machine_id'
            - 'ansible_*_mb'
        ...

    Env Vars and setting the Environment during playbook execution and permanently
        See starter.yml  - Set environment vars - read file and extract values - like env var value
    
    Handlers:

        Sometimes you want a task to run only when a change is made on a machine. 
        For example, you may want to restart a service if a task updates the configuration of that service, 
        but not if the configuration is unchanged. Ansible uses handlers to address this use case. Handlers are tasks that only run when notified. 
        Each handler should have a globally unique name.
        https://docs.ansible.com/ansible/latest/user_guide/playbooks_handlers.html
    Complete starter.yml w/ adding httpd
    *** Disable and remove httpd first for class demo
        Use of handlers to restart server or reload daemon
    

  
