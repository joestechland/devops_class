Last week:
when, changed_when, ignore errors, templates, use roles
Class Q: You DO have to run package_facts - but do not have to register separate var - it creates ansible_facts.packages


Start working with OCI 
Two parts: 
Provison and purge in OCI
Run script to configure compute image for course
Look at main and roles for javaOCI course

How to edit test and run Ansible scripts against OCI w/o using ed-devops/vim
1. Full Ansible script to configure Java on OCI instance (compute/landing pad only)
2. Starts with provisioned OCI compute image (OEL8)
3. main.yml - all roles
- role: update_distro
  
      - role: create_admin_user

      - role: add_linux_support

      - role: create_java_development

      - role: gantsign.maven

      - role: install_docker

      - role: install_minikube

      - role: install_jenkins

      - role: install_course_files

      - role: install_gnome
4. Run from my Mac - w/o VPN
5. How to run from Windows? Linux Virtualbox VM created by vagrant w/ OCI CLI and Ansible module support.
6. Fully configured: OUIT_Devops_Control:
    2 roles: amsible setup, oci_setup:
     # setup:
    # vagrant up 
    # choose public network
    # log in and open terminal and run ip a and see the public ip address
    # ssh-copy-id -i ~/.ssh/key vagrant@public_ip_address
    # ssh-add ~/.ssh/key 
    # test you can log in as vagrant ssh vagrant@public_ip_address
    # create a shares dir
    # create shared drive to where th eansible files are
    # Open shared drive and copy to a loca folder
    # sudo apt update
    # sudo apt install ansible
    # cd to where ansible files are
    # ansible-playbook main.yml
    # when done run: ansible-galaxy install oracle.oci
    # update config file in ~/.oci/oci-cli-rc
    # test ansible  oci modules
    # go to dir where sample_oci_playbook.yml is
    # run ansible-playbook sample_oci_playbook.yml
    # it should run but fail due to not connecting to oci image- but modules are found (unless I include config file and keys)
    # test oci clI
    # in temrminal run oci
    # should see list of commands
    # add to favorites menu: https://askubuntu.com/questions/1193496/add-app-to-favorites-from-command-line
    # Anyconnect installed for VPN access



We'll look at part 2 first.
1. Clone Ansible_Playbook repo locally
2. Open repo in VSC and find my desired Playbook
3. Make copy of playbook ( we'll cover branches in Git later) to be used with new course build
4. Use vagrant to make local vm for testing.
5. Set up ssh to log into vm - ssh-copy-id for keys
6. Open terminal and ssh in 
7. 

1. Setup Control machine for OCI CLI & ansible OCI modules
2. Begin working with OUIT OCI ocic_scripts
3. Clone (or at least edit) ed-devops Ansible Scripts repo

Provision and Configure a new OUIT OCI Env - Build and purge from scratch
https://superuser.com/questions/1255634/install-ansible-in-windows-using-git-bash